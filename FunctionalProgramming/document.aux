\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}数学起源——$\lambda $演算}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}直觉化描述}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}形式化描述}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}$\lambda $演算与其可计算性}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.1}函数生成器}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.2}解决递归}{3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.3}图灵完备性}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {2}函数式编程的现代发展}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}特性}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Python 视角}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.1}lambda 表达式与 map \& reduce}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.2}pipeline与惰性求值}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.3}decorator 与高阶函数}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.4}闭包与函数作为返回值}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {3}函数式的并行化优势与挑战}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Intel CPU Introductions (graph updated August 2009; article text original from December 2004)}}{7}}
\newlabel{fig:label}{{1}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {4}总结与课程体会}{8}}
